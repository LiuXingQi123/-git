#基础知识篇
1.什么是面象对象，面象对象有哪些特征
2.说说JDK（Java编译器(javac把java文件编译成.class问题)、Java运行时环境、Java类库）、JER（Java运行时环境，运行.class文件）、JVM（Java虚拟机，把字节码翻译成指令，不同操作系统之间的指令有可能不同）
3.hashCode()和equals()的区别
4.说说==（基本类型比较值，引用类型比较地址）和equals（默认比较对象地址,不能用于基本数据类型比较）的区别
5.说说List和Set的区别
6.ArrayList和LinkedList的区别
7.HashMap底层实现原理和扩容机制（1.7外层segment相当于小型的hashMap内层hashMap、1.8Entry直接生成一个新的数组再转移kv(多线程扩容)）
8.HashMap的put方法（[1.根据key通过hash算法得到数组下标] [2.数组下标位置元素为空就直接插入，不为空就分1.7和1.8讨论] [3. 1.7先判断是否扩容头插法、1.8先判断是红黑树Node还是链表Node尾插法后判断是否扩容]）
9.深拷贝和浅拷贝的区别
10.CopyOnWriteArrayList是干嘛用的，底层原理是怎么样的
11.什么是字节码，字节码带来的好处是什么
12.java的异常体系是怎么样的
13.
14
15.
16.
17.

#jvm篇
1.什么是 JVM？它有哪些组成部分？
2.什么是垃圾回收器（Garbage Collector）？它的作用是什么？
3.什么是内存泄漏，造成内存泄漏的原因是什么
4.内存回收有哪几种方式，优缺点分别是什么
5.什么是类加载器（ClassLoader）？它的作用是什么？
6.什么是字节码（Bytecode）？它的作用是什么？
7.什么是 JVM 调优？如何进行 JVM 调优？
8.什么是内存泄漏（Memory Leak）？如何避免内存泄漏？
9.什么是线程死锁（Thread Deadlock）？如何避免线程死锁？



#spring篇
1.什么是Spring框架？为什么使用Spring？
1.spring是如何创建Bean对象的（Spring中的bean生命周期？）
2.spring的AOP和IOC是什么，分别有什么用
3.spring为什么要用三级缓存解决循环依赖，导致循环依赖失效的情况有哪些
4.Spring中的bean的作用域有哪些？
5.
6.Spring框架中用到了哪些设计模式
7.@Component和@Bean的区别是什么
8.Spring事务管理的方式有几种？Spring事务中的隔离级别有哪几种？Spring事务中有哪几种事务传播行为？脏读、幻读、不可重复读
9.Spring中的单例bean的线程安全问题了解吗？
10.Spring AOP和AspectJ AOP有什么区别？
11.什么是Spring框架？
12.列举一些重要的Spring模块？
13.Spring 的优点？
14.autowired和resoures的区别



#springmvc篇
1.什么是Spring MVC
1.springmvc工作流程
2.spirngmvc父子容器原理
3.SpringMVC怎么样设定重定向和转发的
4.srpingmvc的拦截器和过滤器
5.
6.
7.



#springboot篇
1.什么是springboot？
2.springboot有哪些优点？
2.springboot核心配置文件是什么？
3.spring boot 配置文件有哪几种类型？它们有什么区别？
4.
5.

#mybatis篇
1.
2.
3.
4.
5.
6.
7.

#redis篇

#mysql篇

#springcloud篇


#消息中间件篇


#分布式篇
1.分布式id解决方案
2.分布式锁解决方案
3.分布式事务解决方案
3.分布式session解决方案

1.分布式id：
uuid生成id；
单点数据库生成id；多点数据库就 不同起始值，步长=数据库数量，缺点就是不好扩容，可移植性差
大量数据取id的话，就有left segment 和 双buff解决方案，优点：扩展灵活，减少了请求数据库的次数
基于redis，zk，mongodb等中间件生成
雪花算法***

2.分布式锁
【基于数据库、基于缓存、基于zk】、【获取释放原子性、超时机制、可重入】【网络开销、cpu开销、系统调用开销】【减少锁的粒度、减少锁的持有时间、非阻塞、本地缓存】
利用主键冲突控制只有一个线程能获取到锁，缺点：不可重入，非阻塞，单点，失效时间
zookeeper分布式锁，（解决了死锁，惊群效应100）
redis解决分布式锁***，（单线程，不需要考虑并发问题）
setnx问题：（业务15ms，setnx10ms）（）
redock（redis没来的急同步）红锁（从多个节点申请锁，获得超过一半才算获得锁成功）

心跳和健康检查、锁的自动释放、续约、备用节点、数据持久化和恢复、分布式协调服务

3.分布式事务
【完整性、一致性】【2PC、3PC、补偿事务、消息驱动】【协调者、参与者、节点、提交请求、提交确认】
xa规范
四个角色（tm事务管理器，资源管理器rm(参与者数据库)，应用程序ap，通信管理器crm）
jta事务时对java xa规范的实现
两阶段协议
三阶段协议（数据库控制）
tcc补偿事务（业务逻辑控制）
基于消息的最终一致性
消息队列mq解决***

数据一致性、可靠性，可扩展、高可用、容错性
网络中断、网络延迟、节点故障
日志和恢复、冗余和备份、事务提交确认
























































